# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RetrofitPotential

    RetrofitPotential(;
        retrofit_potential=nothing,
        ext=nothing,
    )

    - retrofit_potential::Vector{String}
    - ext::Any
"""
Base.@kwdef mutable struct RetrofitPotential <: OpenAPI.APIModel
    retrofit_potential::Union{Nothing, Vector{String}} = nothing
    ext::Union{Nothing, Any} = nothing

    function RetrofitPotential(retrofit_potential, ext, )
        OpenAPI.validate_property(RetrofitPotential, Symbol("retrofit_potential"), retrofit_potential)
        OpenAPI.validate_property(RetrofitPotential, Symbol("ext"), ext)
        return new(retrofit_potential, ext, )
    end
end # type RetrofitPotential

const _property_types_RetrofitPotential = Dict{Symbol,String}(Symbol("retrofit_potential")=>"Vector{String}", Symbol("ext")=>"Any", )
OpenAPI.property_type(::Type{ RetrofitPotential }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RetrofitPotential[name]))}

function check_required(o::RetrofitPotential)
    o.retrofit_potential === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RetrofitPotential }, name::Symbol, val)


end
