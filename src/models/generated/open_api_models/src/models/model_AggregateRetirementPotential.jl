# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AggregateRetirementPotential

    AggregateRetirementPotential(;
        internal=nothing,
        ext=nothing,
        retirement_potential=nothing,
    )

    - internal::InfrastructureSystemsInternal : Internal field
    - ext::Dict : Option for providing additional data
    - retirement_potential::Float64 : Amount of pre-existing capacity for a technology that is eligible for retirement
"""
Base.@kwdef mutable struct AggregateRetirementPotential <: OpenAPI.APIModel
    internal = nothing # spec type: Union{ Nothing, InfrastructureSystemsInternal }
    ext::Union{Nothing, Dict} = nothing
    retirement_potential::Union{Nothing, Float64} = nothing

    function AggregateRetirementPotential(internal, ext, retirement_potential, )
        OpenAPI.validate_property(AggregateRetirementPotential, Symbol("internal"), internal)
        OpenAPI.validate_property(AggregateRetirementPotential, Symbol("ext"), ext)
        OpenAPI.validate_property(AggregateRetirementPotential, Symbol("retirement_potential"), retirement_potential)
        return new(internal, ext, retirement_potential, )
    end
end # type AggregateRetirementPotential

const _property_types_AggregateRetirementPotential = Dict{Symbol,String}(Symbol("internal")=>"InfrastructureSystemsInternal", Symbol("ext")=>"Dict", Symbol("retirement_potential")=>"Float64", )
OpenAPI.property_type(::Type{ AggregateRetirementPotential }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AggregateRetirementPotential[name]))}

function check_required(o::AggregateRetirementPotential)
    o.retirement_potential === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AggregateRetirementPotential }, name::Symbol, val)
end
