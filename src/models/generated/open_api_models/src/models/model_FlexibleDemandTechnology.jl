# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FlexibleDemandTechnology

    FlexibleDemandTechnology(;
        name=nothing,
        available=nothing,
        power_systems_type=nothing,
        max_demand_delay=nothing,
        max_demand_advance=nothing,
        demand_energy_efficiency=nothing,
        var_cost_per_mwh=nothing,
        ext=nothing,
    )

    - name::String
    - available::Bool
    - power_systems_type::String
    - max_demand_delay::Float64
    - max_demand_advance::Float64
    - demand_energy_efficiency::Float64
    - var_cost_per_mwh::ValueCurve
    - ext::Any
"""
Base.@kwdef mutable struct FlexibleDemandTechnology <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    available::Union{Nothing, Bool} = nothing
    power_systems_type::Union{Nothing, String} = nothing
    max_demand_delay::Union{Nothing, Float64} = nothing
    max_demand_advance::Union{Nothing, Float64} = nothing
    demand_energy_efficiency::Union{Nothing, Float64} = nothing
    var_cost_per_mwh = nothing # spec type: Union{ Nothing, ValueCurve }
    ext::Union{Nothing, Any} = nothing

    function FlexibleDemandTechnology(name, available, power_systems_type, max_demand_delay, max_demand_advance, demand_energy_efficiency, var_cost_per_mwh, ext, )
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("name"), name)
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("available"), available)
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("power_systems_type"), power_systems_type)
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("max_demand_delay"), max_demand_delay)
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("max_demand_advance"), max_demand_advance)
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("demand_energy_efficiency"), demand_energy_efficiency)
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("var_cost_per_mwh"), var_cost_per_mwh)
        OpenAPI.validate_property(FlexibleDemandTechnology, Symbol("ext"), ext)
        return new(name, available, power_systems_type, max_demand_delay, max_demand_advance, demand_energy_efficiency, var_cost_per_mwh, ext, )
    end
end # type FlexibleDemandTechnology

const _property_types_FlexibleDemandTechnology = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("available")=>"Bool", Symbol("power_systems_type")=>"String", Symbol("max_demand_delay")=>"Float64", Symbol("max_demand_advance")=>"Float64", Symbol("demand_energy_efficiency")=>"Float64", Symbol("var_cost_per_mwh")=>"ValueCurve", Symbol("ext")=>"Any", )
OpenAPI.property_type(::Type{ FlexibleDemandTechnology }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FlexibleDemandTechnology[name]))}

function check_required(o::FlexibleDemandTechnology)
    o.name === nothing && (return false)
    o.available === nothing && (return false)
    o.power_systems_type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FlexibleDemandTechnology }, name::Symbol, val)








end
