# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExistingCapacity

    ExistingCapacity(;
        existing_capacity=nothing,
        ext=nothing,
    )

    - existing_capacity::Vector{String}
    - ext::Any
"""
Base.@kwdef mutable struct ExistingCapacity <: OpenAPI.APIModel
    existing_capacity::Union{Nothing, Vector{String}} = nothing
    ext::Union{Nothing, Any} = nothing

    function ExistingCapacity(existing_capacity, ext, )
        OpenAPI.validate_property(ExistingCapacity, Symbol("existing_capacity"), existing_capacity)
        OpenAPI.validate_property(ExistingCapacity, Symbol("ext"), ext)
        return new(existing_capacity, ext, )
    end
end # type ExistingCapacity

const _property_types_ExistingCapacity = Dict{Symbol,String}(Symbol("existing_capacity")=>"Vector{String}", Symbol("ext")=>"Any", )
OpenAPI.property_type(::Type{ ExistingCapacity }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExistingCapacity[name]))}

function check_required(o::ExistingCapacity)
    o.existing_capacity === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ExistingCapacity }, name::Symbol, val)


end
