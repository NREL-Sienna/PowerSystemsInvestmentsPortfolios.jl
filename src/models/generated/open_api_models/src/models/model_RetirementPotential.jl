# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

@doc raw"""RetirementPotential

    RetirementPotential(;
        internal=nothing,
        ext=nothing,
        retirement_potential=nothing,
    )

    - internal::InfrastructureSystemsInternal : Internal field
    - ext::Dict : Option for providing additional data
    - retirement_potential::Vector{PSYGenerator} : Individual generation units mapped to a technology that are eligible for retirement
"""
Base.@kwdef mutable struct RetirementPotential <: OpenAPI.APIModel
    internal = nothing # spec type: Union{ Nothing, InfrastructureSystemsInternal }
    ext::Union{Nothing, Dict} = nothing
    retirement_potential = nothing # spec type: Union{ Nothing, Vector{PSYGenerator} }

    function RetirementPotential(internal, ext, retirement_potential)
        OpenAPI.validate_property(RetirementPotential, Symbol("internal"), internal)
        OpenAPI.validate_property(RetirementPotential, Symbol("ext"), ext)
        OpenAPI.validate_property(
            RetirementPotential,
            Symbol("retirement_potential"),
            retirement_potential,
        )
        return new(internal, ext, retirement_potential)
    end
end # type RetirementPotential

const _property_types_RetirementPotential = Dict{Symbol, String}(
    Symbol("internal") => "InfrastructureSystemsInternal",
    Symbol("ext") => "Dict",
    Symbol("retirement_potential") => "Vector{PSYGenerator}",
)
OpenAPI.property_type(::Type{RetirementPotential}, name::Symbol) =
    Union{Nothing, eval(Base.Meta.parse(_property_types_RetirementPotential[name]))}

function check_required(o::RetirementPotential)
    o.retirement_potential === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{RetirementPotential}, name::Symbol, val) end
