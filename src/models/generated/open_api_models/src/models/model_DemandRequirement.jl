# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

@doc raw"""DemandRequirement

    DemandRequirement(;
        name=nothing,
        id=nothing,
        available=true,
        power_systems_type=nothing,
        demand_mw=0.0,
        region=nothing,
    )

    - name::String
    - id::Int64
    - available::Bool
    - power_systems_type::String
    - demand_mw::Float64
    - region::Vector{Int64}
"""
Base.@kwdef mutable struct DemandRequirement <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = nothing
    available::Union{Nothing, Bool} = true
    power_systems_type::Union{Nothing, String} = nothing
    demand_mw::Union{Nothing, Float64} = 0.0
    region::Union{Nothing, Vector{Int64}} = nothing

    function DemandRequirement(name, id, available, power_systems_type, demand_mw, region)
        OpenAPI.validate_property(DemandRequirement, Symbol("name"), name)
        OpenAPI.validate_property(DemandRequirement, Symbol("id"), id)
        OpenAPI.validate_property(DemandRequirement, Symbol("available"), available)
        OpenAPI.validate_property(
            DemandRequirement,
            Symbol("power_systems_type"),
            power_systems_type,
        )
        OpenAPI.validate_property(DemandRequirement, Symbol("demand_mw"), demand_mw)
        OpenAPI.validate_property(DemandRequirement, Symbol("region"), region)
        return new(name, id, available, power_systems_type, demand_mw, region)
    end
end # type DemandRequirement

const _property_types_DemandRequirement = Dict{Symbol, String}(
    Symbol("name") => "String",
    Symbol("id") => "Int64",
    Symbol("available") => "Bool",
    Symbol("power_systems_type") => "String",
    Symbol("demand_mw") => "Float64",
    Symbol("region") => "Vector{Int64}",
)
OpenAPI.property_type(::Type{DemandRequirement}, name::Symbol) =
    Union{Nothing, eval(Base.Meta.parse(_property_types_DemandRequirement[name]))}

function check_required(o::DemandRequirement)
    o.name === nothing && (return false)
    o.available === nothing && (return false)
    o.power_systems_type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{DemandRequirement}, name::Symbol, val)
end
