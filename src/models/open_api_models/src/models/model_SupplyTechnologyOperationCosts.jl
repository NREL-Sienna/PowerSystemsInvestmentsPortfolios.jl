# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.



@doc raw"""SupplyTechnology_operation_costs

    SupplyTechnologyOperationCosts(; value=nothing)
"""
mutable struct SupplyTechnologyOperationCosts <: OpenAPI.OneOfAPIModel
    value::Any # Union{ RenewableGenerationCost, ThermalGenerationCost }
    SupplyTechnologyOperationCosts() = new()
    SupplyTechnologyOperationCosts(value) = new(value)
end # type SupplyTechnologyOperationCosts

function OpenAPI.property_type(::Type{ SupplyTechnologyOperationCosts }, name::Symbol, json::Dict{String,Any})
    discriminator = json["cost_type"]
    if discriminator == "RENEWABLE"
        return eval(Base.Meta.parse("ERRORUNKNOWN"))
    elseif discriminator == "THERMAL"
        return eval(Base.Meta.parse("ERRORUNKNOWN"))
    end
    throw(OpenAPI.ValidationException("Invalid discriminator value: $discriminator for SupplyTechnologyOperationCosts"))
end
